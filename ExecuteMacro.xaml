<Activity mc:Ignorable="sap sap2010" x:Class="ExcuteMacro" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>960,3759</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ExcuteMacro_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="44">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="56">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="ExcuteMacro" sap:VirtualizedContainerService.HintSize="965,3654" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="fileName" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="MacroResultListSheets" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="MacroResultSheetNames" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="MacroResultWb" />
      <Variable x:TypeArguments="x:String" Name="ServiceReportMacroFilePath" />
      <Variable x:TypeArguments="x:String" Name="ServiceDashboardFilePath" />
      <Variable x:TypeArguments="x:Boolean" Default="True" Name="isFileExit" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="MacroFileWb" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Starting Macro Execute" sap:VirtualizedContainerService.HintSize="923,91" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Trace" Message="[&quot;Excuting Macro in Service Revenue Dashboard&quot;]" />
    <Assign sap2010:Annotation.AnnotationText="Assign Service Revenue Dashboard Input File" DisplayName="Assign-Service Dashboard File Path" sap:VirtualizedContainerService.HintSize="923,102" sap2010:WorkflowViewState.IdRef="Assign_5">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[ServiceDashboardFilePath]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[path.Combine(Environment.CurrentDirectory,in_Config("BotInputPath").ToString,in_Config("ServiceRevenueFilePath").ToString)]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <Assign sap2010:Annotation.AnnotationText="Assign Service Macro code file" DisplayName="Assign- Service Macro Code File path" sap:VirtualizedContainerService.HintSize="923,91" sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[ServiceReportMacroFilePath]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[path.Combine(Environment.CurrentDirectory,in_Config("BotInputPath").ToString,in_Config("ServiceReportMacroFilePath").ToString)]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <ui:PathExists sap2010:Annotation.AnnotationText="This Activity will check Service revenue Dashboard File Path exists" DisplayName="Path Exists -Service Dashboard file exists" Exists="[isFileExit]" sap:VirtualizedContainerService.HintSize="923,131" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[ServiceDashboardFilePath]" PathType="File">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:PathExists>
    <If sap2010:Annotation.AnnotationText="in this the Service Dashboard file exit it will execute the Macro code in service revenue dashboard file" Condition="[isFileExit]" DisplayName="If -Service Dashboard File Exit" sap:VirtualizedContainerService.HintSize="923,685" sap2010:WorkflowViewState.IdRef="If_4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="ServiceReportMacroFilePath" sap:VirtualizedContainerService.HintSize="434,506" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" Visible="False" Workbook="[MacroFileWb]" WorkbookPath="[ServiceReportMacroFilePath]">
          <ui:ExcelApplicationScope.Body>
            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
              </ActivityAction.Argument>
              <Sequence sap2010:Annotation.AnnotationText="Executing Service macro code in Service Revenue dashboard file" DisplayName="Service File" sap:VirtualizedContainerService.HintSize="376,397" sap2010:WorkflowViewState.IdRef="Sequence_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign DisplayName="Assign -Macro Parameter" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[fileName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[ServiceDashboardFilePath]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ExecuteMacro ContinueOnError="{x:Null}" MacroOutput="{x:Null}" sap2010:Annotation.AnnotationText="This Activity will execute the Macro Code in Service revenue Dashboard File" DisplayName="Execute Service Macro" sap:VirtualizedContainerService.HintSize="334,101" sap2010:WorkflowViewState.IdRef="ExecuteMacro_1" MacroName="[in_Config(&quot;MacroName&quot;).ToString]" MacroParameters="[{fileName}]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExecuteMacro>
                <ui:ExcelSaveWorkbook DisplayName="Save Service Revenue file" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_1" />
              </Sequence>
            </ActivityAction>
          </ui:ExcelApplicationScope.Body>
        </ui:ExcelApplicationScope>
      </If.Then>
      <If.Else>
        <ui:LogMessage DisplayName="No Service file" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Error" Message="[&quot;No Service Revenue File Found to execute Macro&quot;]" />
      </If.Else>
    </If>
    <Delay sap2010:Annotation.AnnotationText="This Activity will wait 20 sec to Run Macro code in Service Dashboard File" DisplayName="Delay 20 sec" Duration="[TimeSpan.Parse(in_Config(&quot;MacroRunDelay&quot;).ToString)]" sap:VirtualizedContainerService.HintSize="923,79" sap2010:WorkflowViewState.IdRef="Delay_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Delay>
    <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="This Activity will perform Macro Resulted sheets count and names of the sheets available in Service revenue Dashboard" DisplayName="Open Service Revenue Dashboard File" sap:VirtualizedContainerService.HintSize="923,2143" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" Visible="False" Workbook="[MacroResultWb]" WorkbookPath="[ServiceDashboardFilePath]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="inside Service Dashboard file" sap:VirtualizedContainerService.HintSize="889,2003" sap2010:WorkflowViewState.IdRef="Sequence_8">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelSaveWorkbook DisplayName="Save Service Revenue Dashboard workbook" sap:VirtualizedContainerService.HintSize="847,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_2" />
            <ui:ExcelGetWorkbookSheets DisplayName="Get  Service File Workbook Sheets" sap:VirtualizedContainerService.HintSize="847,22" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheets_1" Sheets="[MacroResultListSheets]" />
            <If Condition="[MacroResultListSheets.Count=CInt(in_Config(&quot;MacroSheetCount&quot;).ToString)]" DisplayName="If -Checking Count of Sheets in excel" sap:VirtualizedContainerService.HintSize="847,392" sap2010:WorkflowViewState.IdRef="If_5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Count of Sheets is correct" sap:VirtualizedContainerService.HintSize="376,183" sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Macro Sheets Count" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Macro Resulted Service Revenue Dashboard excel Sheets count is correct&quot;]" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence DisplayName="Count of sheets is Wrong - Throw Exception" sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Macro Sheets Count Wrong" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Error" Message="[&quot;Macro Resulted Service Revenue Dashboard Excel Sheets Count is incorrect. Template mismatch&quot;]" />
                  <Throw DisplayName="Throw- Macro Running Error" Exception="[new BusinessRuleException(&quot;Macro Resulted Service Revenue Dashboard excel  Sheets Count is incorrect. Service Revenue Template is mismatch&quot;)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
                </Sequence>
              </If.Else>
            </If>
            <Assign DisplayName="Assign-Macro Sheets" sap:VirtualizedContainerService.HintSize="847,60" sap2010:WorkflowViewState.IdRef="Assign_7">
              <Assign.To>
                <OutArgument x:TypeArguments="scg:List(x:String)">[MacroResultSheetNames]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="scg:List(x:String)">[MacroResultListSheets]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="This Activity will Go through each sheet after Macro code execute" DisplayName="For Each- Sheet in Service Dashboard File" sap:VirtualizedContainerService.HintSize="847,347" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[MacroResultSheetNames]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="MacroSheets" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Each Macro Sheet" sap:VirtualizedContainerService.HintSize="376,183" sap2010:WorkflowViewState.IdRef="Sequence_5">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Macro Resulted Sheet Names" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[&quot;Sheet Name is : &quot; +MacroSheets]" />
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEach>
            <If sap2010:Annotation.AnnotationText="This Activity will check Macro Resulted Sheet Names Availabilty in Service revenue dashboard file" Condition="[MacroResultSheetNames.Contains(in_Config(&quot;ServiceReportSheetName1&quot;).ToString) ANDALSO MacroResultSheetNames.Contains(in_Config(&quot;ServiceReportSheetName2&quot;).ToString) ANDALSO MacroResultSheetNames.Contains(in_Config(&quot;ServiceReportSheetName3&quot;).ToString) ANDALSO MacroResultSheetNames.Contains(in_Config(&quot;ServiceReportSheetName4&quot;).ToString) ANDALSO MacroResultSheetNames.Contains(in_Config(&quot;ServiceReportSheetName5&quot;).ToString) ANDALSO MacroResultSheetNames.Contains(in_Config(&quot;ServiceReportSheetName6&quot;).ToString) ANDALSO MacroResultSheetNames.Contains(in_Config(&quot;ServiceReportSheetName7&quot;).ToString)]" DisplayName="If - Checking sheet Names Availability" sap:VirtualizedContainerService.HintSize="847,769" sap2010:WorkflowViewState.IdRef="If_6">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="SheetNames is Present" sap:VirtualizedContainerService.HintSize="376,183" sap2010:WorkflowViewState.IdRef="Sequence_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Macro Sheet names" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Info" Message="[&quot;Macro Resulted Sheet Names Present in Service Revenue Dashboard excel&quot;]" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence DisplayName="Sheet Names are not available" sap:VirtualizedContainerService.HintSize="426,591" sap2010:WorkflowViewState.IdRef="Sequence_7">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="macroExpMailBody" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Macro Sheet Names wrong" sap:VirtualizedContainerService.HintSize="384,91" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Error" Message="[&quot;Macro Code was not executed because of Service revenue Dashboard template data mismatch&quot;]" />
                  <Throw DisplayName="Throw Macro Result exception" Exception="[new BusinessRuleException(&quot;Macro Code was not executed because of Service revenue Dashboard template data mismatch&quot;)]" sap:VirtualizedContainerService.HintSize="384,22" sap2010:WorkflowViewState.IdRef="Throw_2" />
                  <ui:ReadTextFile Content="[macroExpMailBody]" DisplayName="Read macro Exception Mail body" FileName="[in_Config(&quot;MacroExceptionMailBody&quot;).ToString]" sap:VirtualizedContainerService.HintSize="384,79" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
                  <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" Email="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" Password="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="This will Send Exception mail to User Macro Resulted Sheets not Available" Body="[macroExpMailBody]" DisplayName="Send Macro Exception SMTP Mail Message" EnableSSL="True" From="[in_Config(&quot;ServiceReport_SharedMailAccount&quot;).ToString]" sap:VirtualizedContainerService.HintSize="384,187" sap2010:WorkflowViewState.IdRef="SendMail_1" IsBodyHtml="True" Port="[CINT(in_Config(&quot;SMTP_Port&quot;).ToString)]" SecureConnection="Auto" Server="[in_Config(&quot;SMTPServer&quot;).ToString]" Subject="[in_Config(&quot;ExceptionSub&quot;).ToString+&quot;-&quot;+in_Config(&quot;MailSubProjectName&quot;).ToString]" To="[in_Config(&quot;TestEmail&quot;).ToString]">
                    <ui:SendMail.Files>
                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                    </ui:SendMail.Files>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:SendMail>
                </Sequence>
              </If.Else>
            </If>
            <ui:ExcelCloseWorkbook DisplayName="Close Service Macro code workbook" sap:VirtualizedContainerService.HintSize="847,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_1" Workbook="[MacroResultWb]" />
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ExcelApplicationScope>
  </Sequence>
</Activity>