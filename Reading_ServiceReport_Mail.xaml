<Activity mc:Ignorable="sap sap2010" x:Class="Reading_ServiceReport_Mail" this:Reading_ServiceReport_Mail.in_SubjectLine="Service Revenue" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_SubjectLine" Type="InArgument(x:String)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_MonthEndSubjectLine" Type="InArgument(x:String)" />
    <x:Property Name="in_Passwords" Type="InArgument(scg:Dictionary(x:String, ss:SecureString))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>960,1035</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Reading_ServiceReport_Mail_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="48">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>Microsoft.Exchange.WebServices.Data</x:String>
      <x:String>UiPath.Mail.Exchange.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="56">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.Exchange.WebServices</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap2010:Annotation.AnnotationText="This Flow Charts will perform Reading Service Dashboard Email and Downloading Service Dashboard mail and Validating Input Template" DisplayName="Reading_ServiceReport_Mail" sap:VirtualizedContainerService.HintSize="634,930" sap2010:WorkflowViewState.IdRef="Flowchart_2">
    <Flowchart.Variables>
      <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="GetMailMessage" />
      <Variable x:TypeArguments="sd:DataTable" Name="ServiceRevenueDT1" />
      <Variable x:TypeArguments="x:String" Name="attachmentNotFoundMailMsg" />
      <Variable x:TypeArguments="x:String" Name="ServiceRevenueReportFile" />
      <Variable x:TypeArguments="x:String" Name="noEmailFoundBody" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">300,77.5 290,77.5 290,84.5</av:PointCollection>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
        <x:Double x:Key="Height">851.5</x:Double>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID8</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID8">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">190,84.5</av:Point>
          <av:Size x:Key="ShapeSize">200,51</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">290,135.5 290,165.5 280,165.5 280,244.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message - Reading Service Report  Email" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="LogMessage_33" Level="Info" Message="[&quot;Reading Mail from Outlook&quot;]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:LogMessage>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID5">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">180,244.5</av:Point>
              <av:Size x:Key="ShapeSize">200,22</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">280,266.5 280,296.5 240,296.5 240,315.5</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:GetExchangeMailMessages ApplicationId="{x:Null}" DirectoryId="{x:Null}" EmailAutodiscover="{x:Null}" TimeoutMS="{x:Null}" AuthenticationMode="UserNameAndPassword" CustomFolder="[in_Config(&quot;ServiceReport_MailFolder&quot;).ToString]" DisplayName="Get Service Revenue Mail" Domain="[in_Config(&quot;ExchangeMail_Domain&quot;).ToString]" ExchangeVersion="Exchange2013_SP1" GetAttachements="True" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GetExchangeMailMessages_1" IsBodyHtml="True" MailFolder="Calendar" MarkAsRead="True" Messages="[GetMailMessage]" OnlyUnreadMessages="True" Password="[New System.Net.NetworkCredential(String.Empty, in_Passwords.Item(&quot;Exchange_MailBox_Credentials&quot;)).Password]" Server="[in_Config(&quot;ExchangeMail_Server&quot;).ToString]" SharedMailbox="[in_Config(&quot;ServiceReport_SharedMailAccount&quot;).ToString]" Top="[CINT(in_Config(&quot;ReadEmails&quot;).ToString)]" User="[in_Config(&quot;Exchange_MailBox_Credentials&quot;).ToString]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:GetExchangeMailMessages>
          <FlowStep.Next>
            <FlowDecision x:Name="__ReferenceID0" sap2010:Annotation.AnnotationText="Checking Unread emails present or Not" Condition="[GetMailMessage.Count=0]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="155,129" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <av:Point x:Key="ShapeLocation">162.5,315.5</av:Point>
                  <av:Size x:Key="ShapeSize">155,129</av:Size>
                  <av:PointCollection x:Key="FalseConnector">317.5,380 470,380 470,484.5</av:PointCollection>
                  <av:PointCollection x:Key="TrueConnector">162.5,380 100,380 100,504.5</av:PointCollection>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <FlowDecision.True>
                <FlowStep x:Name="__ReferenceID6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">0,504.5</av:Point>
                      <av:Size x:Key="ShapeSize">200,51</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">100,555.5 100,583.5</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message -Zero Emails" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="LogMessage_46" Level="Info" Message="[&quot;Service Revenue Emails not found&quot;]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:LogMessage>
                  <FlowStep.Next>
                    <FlowStep x:Name="__ReferenceID3">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">0,583.5</av:Point>
                          <av:Size x:Key="ShapeSize">200,93</av:Size>
                          <av:PointCollection x:Key="ConnectorLocation">100,676.5 100,728.5</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ReadTextFile sap2010:Annotation.AnnotationText="This Activity will do Reading No EMail Found Mail body" Content="[noEmailFoundBody]" DisplayName="Read No Email Found Mai body" FileName="[in_Config(&quot;NoEmailFoundBody&quot;).ToString]" sap:VirtualizedContainerService.HintSize="200,93" sap2010:WorkflowViewState.IdRef="ReadTextFile_6">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:ReadTextFile>
                      <FlowStep.Next>
                        <FlowStep x:Name="__ReferenceID1">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">0,728.5</av:Point>
                              <av:Size x:Key="ShapeSize">200,123</av:Size>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" Email="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" Password="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Description: Sending Mail to the Functional Team if there is no Email found for Service Revenue" Body="[noEmailFoundBody]" DisplayName="Send No Email Found SMTP Mail Message" EnableSSL="True" From="[in_Config(&quot;ServiceReport_SharedMailAccount&quot;).ToString]" sap:VirtualizedContainerService.HintSize="200,123" sap2010:WorkflowViewState.IdRef="SendMail_8" IsBodyHtml="True" Port="[CINT(in_Config(&quot;SMTP_Port&quot;).ToString)]" SecureConnection="Auto" Server="[in_Config(&quot;SMTPServer&quot;).ToString]" Subject="[in_Config(&quot;NoEmailFoundSub&quot;).ToString+&quot;-&quot;+in_Config(&quot;MailSubProjectName&quot;).ToString]" To="[in_Config(&quot;DataIssues_ErrorDL&quot;).ToString]">
                            <ui:SendMail.Files>
                              <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                            </ui:SendMail.Files>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:SendMail>
                        </FlowStep>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowStep.Next>
                </FlowStep>
              </FlowDecision.True>
              <FlowDecision.False>
                <FlowStep x:Name="__ReferenceID7">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">370,484.5</av:Point>
                      <av:Size x:Key="ShapeSize">200,51</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">470,535.5 470,546</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message -EMails Found" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="LogMessage_47" Level="Info" Message="[&quot;Service Revenue Emails Found&quot;]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:LogMessage>
                  <FlowStep.Next>
                    <FlowStep x:Name="__ReferenceID2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">370,546</av:Point>
                          <av:Size x:Key="ShapeSize">200,108</av:Size>
                          <av:PointCollection x:Key="ConnectorLocation">470,654 470,684 480,684 480,686</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ForEach x:TypeArguments="snm:MailMessage" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Description:  Dowanloading Service revenue Dashboard File from Mail" DisplayName="Downloading Service Revenue Report" sap:VirtualizedContainerService.HintSize="200,108" sap2010:WorkflowViewState.IdRef="ForEach`1_13" Values="[GetMailMessage]">
                        <ui:ForEach.Body>
                          <ActivityAction x:TypeArguments="snm:MailMessage">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="snm:MailMessage" Name="mail" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Inside Email" sap:VirtualizedContainerService.HintSize="1873,1181" sap2010:WorkflowViewState.IdRef="Sequence_67">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If sap2010:Annotation.AnnotationText="Checking Service Revenue Subject Line Availabilty in email" Condition="[mail.Subject.Contains(in_MonthEndSubjectLine)]" DisplayName="If - Checking Subject Line" sap:VirtualizedContainerService.HintSize="1831,1089" sap2010:WorkflowViewState.IdRef="If_26">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <If sap2010:Annotation.AnnotationText="Checking Service Revnue Attachment is Availability" Condition="[mail.Attachments.Any]" DisplayName=" Checking End of the Month Attachments Availability" sap:VirtualizedContainerService.HintSize="897,910" sap2010:WorkflowViewState.IdRef="If_24">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Then>
                                      <Sequence sap2010:Annotation.AnnotationText="Saving Service revenue Dashboard file attachments in bot input Folder" DisplayName="Attachments Available - Save attachments" sap:VirtualizedContainerService.HintSize="426,731" sap2010:WorkflowViewState.IdRef="Sequence_62">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:LogMessage DisplayName="Enter to End of the Month" sap:VirtualizedContainerService.HintSize="384,91" sap2010:WorkflowViewState.IdRef="LogMessage_34" Level="Info" Message="[&quot;End of the Month Service Report&quot;]" />
                                        <ui:SaveMailAttachments Attachments="{x:Null}" DisplayName="Save  Service revenue Attachments" Filter=".xlsx" FolderPath="[in_Config(&quot;BotInputPath&quot;).ToString]" sap:VirtualizedContainerService.HintSize="384,87" sap2010:WorkflowViewState.IdRef="SaveMailAttachments_6" Message="[mail]" />
                                        <ui:CopyFile ContinueOnError="{x:Null}" Destination="[path.Combine(Environment.CurrentDirectory,in_Config(&quot;BotInputPath&quot;).ToString,in_Config(&quot;ServiceRevenueFilePath&quot;).ToString)]" DisplayName="Copy End of the Month file to Service Revenue dashboard File" sap:VirtualizedContainerService.HintSize="384,157" sap2010:WorkflowViewState.IdRef="CopyFile_2" Overwrite="True" Path="[path.Combine(Environment.CurrentDirectory,in_Config(&quot;BotInputPath&quot;).ToString,in_Config(&quot;MonthEndServiceFileName&quot;).ToString)]" />
                                        <ui:LogMessage DisplayName="Service Revenue Saved" sap:VirtualizedContainerService.HintSize="384,91" sap2010:WorkflowViewState.IdRef="LogMessage_35" Level="Info" Message="[&quot;Service Revenue Dashboard report Saved Successfully&quot;]" />
                                        <ui:Break DisplayName="Break the end of the month Condition" sap:VirtualizedContainerService.HintSize="384,22" sap2010:WorkflowViewState.IdRef="Break_4" />
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence DisplayName="No Attachments - Send mail to Functional Team" sap:VirtualizedContainerService.HintSize="426,560" sap2010:WorkflowViewState.IdRef="Sequence_63">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:LogMessage DisplayName="Enter to No Attchments Found" sap:VirtualizedContainerService.HintSize="384,91" sap2010:WorkflowViewState.IdRef="LogMessage_36" Level="Error" Message="[&quot;Service Revenue Dashboard attachment not available&quot;]" />
                                        <ui:ReadTextFile sap2010:Annotation.AnnotationText="Reading No attachment found Mail body" Content="[attachmentNotFoundMailMsg]" DisplayName="Read attachment not found mail body" FileName="[in_Config(&quot;attachmentNotFoundMailBody&quot;).ToString]" sap:VirtualizedContainerService.HintSize="384,110" sap2010:WorkflowViewState.IdRef="ReadTextFile_7">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:ReadTextFile>
                                        <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" Email="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" Password="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Description: Sending Mail to Functional team No attachment found in email for Service revenue" Body="[attachmentNotFoundMailMsg]" DisplayName="Send No Attachments Found in End of the Month Email" EnableSSL="True" From="[in_Config(&quot;ServiceReport_SharedMailAccount&quot;).ToString]" sap:VirtualizedContainerService.HintSize="384,187" sap2010:WorkflowViewState.IdRef="SendMail_9" IsBodyHtml="True" Port="[CINT(in_Config(&quot;SMTP_Port&quot;).ToString)]" SecureConnection="Auto" Server="[in_Config(&quot;SMTPServer&quot;).ToString]" Subject="[in_Config(&quot;attachmentNotFound&quot;).ToString+&quot;-&quot;+Now.ToString+&quot;-&quot;+in_Config(&quot;MailSubProjectName&quot;).ToString]" To="[in_Config(&quot;DataIssues_ErrorDL&quot;).ToString]">
                                          <ui:SendMail.Files>
                                            <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                          </ui:SendMail.Files>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:SendMail>
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                </If.Then>
                                <If.Else>
                                  <Sequence DisplayName="Checking Daily Service Revenue Subject" sap:VirtualizedContainerService.HintSize="889,800" sap2010:WorkflowViewState.IdRef="Sequence_66">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If Condition="[mail.Subject.Contains(in_SubjectLine)]" DisplayName="If- Mail Subject Service Revenue" sap:VirtualizedContainerService.HintSize="847,708" sap2010:WorkflowViewState.IdRef="If_25">
                                      <If.Then>
                                        <Sequence DisplayName="Save Service Revenue Dashboard file" sap:VirtualizedContainerService.HintSize="376,441" sap2010:WorkflowViewState.IdRef="Sequence_64">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:LogMessage DisplayName="Enter to Daily Dashboard" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_37" Level="Info" Message="[&quot;Daily Service Revenue File&quot;]" />
                                          <ui:SaveMailAttachments Attachments="{x:Null}" DisplayName="Save  Service revenue Attachments" Filter=".xlsx" FolderPath="[in_Config(&quot;BotInputPath&quot;).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="SaveMailAttachments_7" Message="[mail]" />
                                          <ui:LogMessage DisplayName="Daily Service Revnue Saved" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_38" Level="Info" Message="[&quot;Service Revenue Dashboard report Saved Successfully&quot;]" />
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence DisplayName="No Subject Found in Email" sap:VirtualizedContainerService.HintSize="426,560" sap2010:WorkflowViewState.IdRef="Sequence_65">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:LogMessage DisplayName="No Subject Line Found" sap:VirtualizedContainerService.HintSize="384,91" sap2010:WorkflowViewState.IdRef="LogMessage_39" Level="Error" Message="[&quot;Not Found Service Revenue Subject in mail&quot;]" />
                                          <ui:ReadTextFile sap2010:Annotation.AnnotationText="Reading No attachment found Mail body" Content="[attachmentNotFoundMailMsg]" DisplayName="Read attachment not found End of the Month mail body" FileName="[in_Config(&quot;attachmentNotFoundMailBody&quot;).ToString]" sap:VirtualizedContainerService.HintSize="384,110" sap2010:WorkflowViewState.IdRef="ReadTextFile_8">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:ReadTextFile>
                                          <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" Email="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" Password="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Description: Sending Mail to Functional team No attachment found in email for Service revenue" Body="[attachmentNotFoundMailMsg]" DisplayName="Send No Attachments Found in Service Revenue  Email" EnableSSL="True" From="[in_Config(&quot;ServiceReport_SharedMailAccount&quot;).ToString]" sap:VirtualizedContainerService.HintSize="384,187" sap2010:WorkflowViewState.IdRef="SendMail_10" IsBodyHtml="True" Port="[CINT(in_Config(&quot;SMTP_Port&quot;).ToString)]" SecureConnection="Auto" Server="[in_Config(&quot;SMTPServer&quot;).ToString]" Subject="[in_Config(&quot;attachmentNotFound&quot;).ToString+&quot;-&quot;+Now.ToString+&quot;-&quot;+in_Config(&quot;MailSubProjectName&quot;).ToString]" To="[in_Config(&quot;DataIssues_ErrorDL&quot;).ToString]">
                                            <ui:SendMail.Files>
                                              <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                            </ui:SendMail.Files>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:SendMail>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEach.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:ForEach>
                      <FlowStep.Next>
                        <FlowStep x:Name="__ReferenceID4">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">380,686</av:Point>
                              <av:Size x:Key="ShapeSize">200,108</av:Size>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Sequence sap2010:Annotation.AnnotationText="Description: Validating Service Revenue Dashboard template" DisplayName="Validating_Excel_Template" sap:VirtualizedContainerService.HintSize="1001,3829" sap2010:WorkflowViewState.IdRef="Sequence_77">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="scg:List(x:String)" Name="sheetsCount" />
                              <Variable x:TypeArguments="scg:List(x:String)" Name="sheetNames" />
                              <Variable x:TypeArguments="x:Boolean" Default="False" Name="deleteServiceRevenueFile" />
                              <Variable x:TypeArguments="ui:WorkbookApplication" Name="serviceRevenueWB" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap2010:Annotation.AnnotationText="Assign Service Revenue Dashboard Input File Path" DisplayName="Assign- Service revenue Dashboard File Name" sap:VirtualizedContainerService.HintSize="959,102" sap2010:WorkflowViewState.IdRef="Assign_8">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[ServiceRevenueReportFile]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[path.Combine(Environment.CurrentDirectory,in_Config("BotInputPath").ToString,in_Config("ServiceRevenueFilePath").ToString)]</InArgument>
                              </Assign.Value>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Assign>
                            <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="This Activity will Open Service Revenue Dashboard file and Counting the Sheets" DisplayName="Open Service Revenue Dahsboard File" sap:VirtualizedContainerService.HintSize="959,3044" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" Visible="False" Workbook="[serviceRevenueWB]" WorkbookPath="[ServiceRevenueReportFile]">
                              <ui:ExcelApplicationScope.Body>
                                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Service Dashboard" sap:VirtualizedContainerService.HintSize="925,2904" sap2010:WorkflowViewState.IdRef="Sequence_75">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelGetWorkbookSheets sap2010:Annotation.AnnotationText="The activity will return the number of sheets in excel" DisplayName="Get Service Revenue Workbook Sheets" sap:VirtualizedContainerService.HintSize="883,64" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheets_2" Sheets="[sheetsCount]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelGetWorkbookSheets>
                                    <If sap2010:Annotation.AnnotationText="This Activty will check Sheets Count in the Service Dashboard File" Condition="[sheetsCount.Count()=CInt(in_Config(&quot;ServiceSheetCounts&quot;).ToString)]" DisplayName="If -Checking Count of Sheets in excel" sap:VirtualizedContainerService.HintSize="883,480" sap2010:WorkflowViewState.IdRef="If_27">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If.Then>
                                        <Sequence DisplayName="Count of Sheets is correct" sap:VirtualizedContainerService.HintSize="376,183" sap2010:WorkflowViewState.IdRef="Sequence_68">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:LogMessage DisplayName="Sheets Count" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_40" Level="Info" Message="[&quot;Service Revenue Dashboard excel Sheets count is correct&quot;]" />
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence DisplayName="Count of sheets is Wrong - Throw Exception" sap:VirtualizedContainerService.HintSize="376,302" sap2010:WorkflowViewState.IdRef="Sequence_69">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:LogMessage DisplayName="Sheets count Wrong" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_41" Level="Error" Message="[&quot;Service Revenue Dashboard Excel Sheets Count is incorrect&quot;]" />
                                          <Throw sap2010:Annotation.AnnotationText="This Activity will throw Exception if Count of sheets is not match" DisplayName="Throw - Sheets Count Wrong Exception" Exception="[new BusinessRuleException(&quot;Service Revenue Dashboard excel  Sheets Count is incorrect&quot;)]" sap:VirtualizedContainerService.HintSize="334,79" sap2010:WorkflowViewState.IdRef="Throw_3">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </Throw>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                    <Assign DisplayName="Getting SheetNames" sap:VirtualizedContainerService.HintSize="883,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="scg:List(x:String)">[sheetNames]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="scg:List(x:String)">[sheetsCount]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="This Activity will Check each Sheet Name in the Service revenue Dashboard File" DisplayName="Getting SheetNames" sap:VirtualizedContainerService.HintSize="883,358" sap2010:WorkflowViewState.IdRef="ForEach`1_14" Values="[sheetNames]">
                                      <ui:ForEach.Body>
                                        <ActivityAction x:TypeArguments="x:String">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="x:String" Name="sheetName" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Each Sheet Name" sap:VirtualizedContainerService.HintSize="376,183" sap2010:WorkflowViewState.IdRef="Sequence_70">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:LogMessage DisplayName="Write SheetName in Service Revenue File" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_42" Level="Info" Message="[&quot;Sheet Name is : &quot; +sheetName]" />
                                          </Sequence>
                                        </ActivityAction>
                                      </ui:ForEach.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ForEach>
                                    <If sap2010:Annotation.AnnotationText="This Activity will check each Sheet Name in the Dashboard File" Condition="[sheetNames.Contains(in_Config(&quot;ServiceReportSheetName1&quot;).ToString) ANDALSO sheetNames.Contains(in_Config(&quot;ServiceReportSheetName5&quot;).ToString) ANDALSO  sheetNames.Contains(in_Config(&quot;ServiceReportSheetName6&quot;).ToString) ANDALSO sheetNames.Contains(in_Config(&quot;ServiceReportSheetName7&quot;).ToString)]" DisplayName="If - Checking sheet Names Availability" sap:VirtualizedContainerService.HintSize="883,495" sap2010:WorkflowViewState.IdRef="If_28">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If.Then>
                                        <Sequence DisplayName="SheetNames is Present" sap:VirtualizedContainerService.HintSize="376,183" sap2010:WorkflowViewState.IdRef="Sequence_71">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:LogMessage DisplayName="Sheet Names Present" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_43" Level="Info" Message="[&quot;Required Sheet Names Present in Service Revenue Dashboard excel&quot;]" />
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence DisplayName="Sheet Names are not available" sap:VirtualizedContainerService.HintSize="376,317" sap2010:WorkflowViewState.IdRef="Sequence_72">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:LogMessage DisplayName="Sheet Names Not Present" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_44" Level="Error" Message="[&quot;Required Sheet Names not Available in Service Revenue Dashboard Excel&quot;]" />
                                          <Throw sap2010:Annotation.AnnotationText="This Activity will throw exception When SheetNames not match in the Service Revenue Dashboard File" DisplayName="Throw- Sheets Names not present Exception" Exception="[new BusinessRuleException(&quot;Required Sheet Names not Available in Service Revenue Dashboard Excel&quot;)]" sap:VirtualizedContainerService.HintSize="334,94" sap2010:WorkflowViewState.IdRef="Throw_4">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </Throw>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="This Activity Will go through Each Sheet in Service Revenue File" DisplayName="For Each Sheet in Service Revenue File" sap:VirtualizedContainerService.HintSize="883,1155" sap2010:WorkflowViewState.IdRef="ForEach`1_15" Values="[sheetNames]">
                                      <ui:ForEach.Body>
                                        <ActivityAction x:TypeArguments="x:String">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="x:String" Name="Sheet" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Each Sheet in Dashboard file" sap:VirtualizedContainerService.HintSize="847,991" sap2010:WorkflowViewState.IdRef="Sequence_74">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelReadRange AddHeaders="False" sap2010:Annotation.AnnotationText="This Activity will Read Range in each sheet" DataTable="[ServiceRevenueDT1]" DisplayName="Read each Sheet in Service Revenue" sap:VirtualizedContainerService.HintSize="805,90" sap2010:WorkflowViewState.IdRef="ExcelReadRange_2" Range="[in_Config(&quot;ServicefileErrorRange&quot;).ToString]" SheetName="[Sheet]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelReadRange>
                                            <If sap2010:Annotation.AnnotationText="This Activity will check if the Service dashboard file has Error Message or not" Condition="[ServiceRevenueDT1.Rows(0).Item(0).ToString.Contains(&quot;error&quot;)]" DisplayName="If Service Dashboard File has Errors" sap:VirtualizedContainerService.HintSize="805,769" sap2010:WorkflowViewState.IdRef="If_29">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If.Then>
                                                <Sequence DisplayName="Service File has Errors" sap:VirtualizedContainerService.HintSize="426,591" sap2010:WorkflowViewState.IdRef="Sequence_73">
                                                  <Sequence.Variables>
                                                    <Variable x:TypeArguments="x:String" Name="fileNotExpectedMailBody" />
                                                  </Sequence.Variables>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:ReadTextFile sap2010:Annotation.AnnotationText="Reading File Not Expected  EMail body" Content="[fileNotExpectedMailBody]" DisplayName="Reading File not Expected Mail body" FileName="[in_Config(&quot;FileNotExpected&quot;).ToString]" sap:VirtualizedContainerService.HintSize="384,110" sap2010:WorkflowViewState.IdRef="ReadTextFile_9">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:ReadTextFile>
                                                  <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" Email="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" Password="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="This Activity will send mail  to Functional team - Service Revenue File has Error Message" Body="[fileNotExpectedMailBody]" DisplayName="Send EMail to Functional team If File Has Errors" EnableSSL="True" From="[in_Config(&quot;ServiceReport_SharedMailAccount&quot;).ToString]" sap:VirtualizedContainerService.HintSize="384,187" sap2010:WorkflowViewState.IdRef="SendMail_11" IsBodyHtml="True" Port="[CINT(in_Config(&quot;SMTP_Port&quot;).ToString)]" SecureConnection="Auto" Server="[in_Config(&quot;SMTPServer&quot;).ToString]" Subject="[in_Config(&quot;TemplateMismatch&quot;).ToString+&quot;-&quot;+in_Config(&quot;MailSubProjectName&quot;).ToString]" To="[in_Config(&quot;DataIssues_ErrorDL&quot;).ToString]">
                                                    <ui:SendMail.Files>
                                                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                                    </ui:SendMail.Files>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:SendMail>
                                                  <Assign DisplayName="Assign- delete service file boolean" sap:VirtualizedContainerService.HintSize="384,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Boolean">[deleteServiceRevenueFile]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <ui:Break DisplayName="Break the condition" sap:VirtualizedContainerService.HintSize="384,22" sap2010:WorkflowViewState.IdRef="Break_5" />
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <ui:LogMessage DisplayName="No Errors" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_45" Level="Info" Message="[&quot;No Errors in Service Dashboard File&quot;]" />
                                              </If.Else>
                                            </If>
                                          </Sequence>
                                        </ActivityAction>
                                      </ui:ForEach.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ForEach>
                                  </Sequence>
                                </ActivityAction>
                              </ui:ExcelApplicationScope.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelApplicationScope>
                            <If sap2010:Annotation.AnnotationText="This Activity will check Input File has Errors or Not" Condition="[deleteServiceRevenueFile]" DisplayName="If Service Dashboard File Has errors" sap:VirtualizedContainerService.HintSize="959,480" sap2010:WorkflowViewState.IdRef="If_30">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence DisplayName="delete Service file True" sap:VirtualizedContainerService.HintSize="376,301" sap2010:WorkflowViewState.IdRef="Sequence_76">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:ExcelCloseWorkbook sap2010:Annotation.AnnotationText="Closing Service Revenue dashboard File" DisplayName="Close Service Revenue File" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_3" Workbook="[serviceRevenueWB]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:ExcelCloseWorkbook>
                                  <ui:Delete ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Deleting Service revenue Dashboard if the File Has Errors" DisplayName="Delete -  Service Revenue File" sap:VirtualizedContainerService.HintSize="334,79" sap2010:WorkflowViewState.IdRef="Delete_3" Path="[path.Combine(Environment.CurrentDirectory,&quot;Data\Input&quot;,in_Config(&quot;ServiceRevenueFilePath&quot;).ToString)]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:Delete>
                                </Sequence>
                              </If.Then>
                            </If>
                          </Sequence>
                        </FlowStep>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowStep.Next>
                </FlowStep>
              </FlowDecision.False>
            </FlowDecision>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID6</x:Reference>
    <x:Reference>__ReferenceID7</x:Reference>
  </Flowchart>
</Activity>