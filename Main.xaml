<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="960,1028" sap2010:WorkflowViewState.IdRef="Main_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Windows.Controls</x:String>
      <x:String>System.Windows.Documents</x:String>
      <x:String>System.Windows.Shapes</x:String>
      <x:String>System.Windows.Shell</x:String>
      <x:String>System.Windows.Navigation</x:String>
      <x:String>System.Windows.Data</x:String>
      <x:String>System.Windows</x:String>
      <x:String>System.Windows.Controls.Primitives</x:String>
      <x:String>System.Windows.Media.Animation</x:String>
      <x:String>System.Windows.Input</x:String>
      <x:String>System.Windows.Media</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Windows.Media.Media3D</x:String>
      <x:String>System.Windows.Media.Imaging</x:String>
      <x:String>System.Windows.Automation</x:String>
      <x:String>System.Windows.Media.TextFormatting</x:String>
      <x:String>System.Windows.Ink</x:String>
      <x:String>System.Windows.Media.Effects</x:String>
      <x:String>System.Windows.Forms.Integration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Credentials.Activities</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.FileSystem.Activities</x:String>
      <x:String>UiPath.FTP.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Mail.Exchange.Activities</x:String>
      <x:String>UiPath.Mail.IMAP.Activities</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.POP3.Activities</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>UiPath.XPS.Activities</x:String>
      <x:String>UiPath.Enterprise.Activities.Process</x:String>
      <x:String>UiPath.Script.Activities</x:String>
      <x:String>UiPath.Script.Activities.PowerShell</x:String>
      <x:String>UiPath.Script.Activities.AutoHotKey</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>UiPath.JSON.Activities</x:String>
      <x:String>UiPath.REST.Activities</x:String>
      <x:String>UiPath.SOAP.Activities</x:String>
      <x:String>UiPath.XML.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.ComponentModel</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>WindowsFormsIntegration</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Credentials.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.FTP.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Script.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <StateMachine InitialState="{x:Reference __ReferenceID3}" sap2010:Annotation.AnnotationText="Batch Framework Version 202010-1" DisplayName="Main Process" sap:VirtualizedContainerService.HintSize="795,843" sap2010:WorkflowViewState.IdRef="StateMachine_2">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">410,2.5</av:Point>
        <x:Double x:Key="StateContainerWidth">761</x:Double>
        <x:Double x:Key="StateContainerHeight">776.5</x:Double>
        <av:PointCollection x:Key="ConnectorLocation">440,77.5 440,154</av:PointCollection>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <State x:Name="__ReferenceID2" sap2010:Annotation.AnnotationText="Processed the data loaded. This step cannot be retried." DisplayName="Process Batch Data" sap:VirtualizedContainerService.HintSize="231,112" sap2010:WorkflowViewState.IdRef="State_7">
      <State.Entry>
        <TryCatch DisplayName="Process Transaction" sap:VirtualizedContainerService.HintSize="456,1156" sap2010:WorkflowViewState.IdRef="TryCatch_14">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <TryCatch.Try>
            <Sequence DisplayName="Process the current TransactionItem" sap:VirtualizedContainerService.HintSize="418,598" sap2010:WorkflowViewState.IdRef="Sequence_40">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Log transaction started" sap:VirtualizedContainerService.HintSize="376,379" sap2010:WorkflowViewState.IdRef="Sequence_39">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign DisplayName="Set transaction name" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_44">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[transactionName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[Config("TransactionName").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Set transaction start time" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_45">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:DateTime">[transactionStartTime]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:DateTime">[DateTime.Now]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log tranasaction started" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_31" UnSafe="False" WorkflowFileName="Framework\TransactionStartLog.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="TransactionID">[transactionId]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="TransactionName">[transactionName]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="TransactionStartTime">[transactionStartTime.ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="ProjectId">[Config("ProjectId").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[Config("ProjectName").ToString]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </Sequence>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ProcessTransaction workflow" sap:VirtualizedContainerService.HintSize="376,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_32" UnSafe="False" WorkflowFileName="Process.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                    <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="Config" />
                  </InArgument>
                  <InArgument x:TypeArguments="sd:DataTable" x:Key="in_BatchData">
                    <mva:VisualBasicValue x:TypeArguments="sd:DataTable" ExpressionText="batchData" />
                  </InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_BatchInfo">
                    <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="batchInfo" />
                  </InArgument>
                  <OutArgument x:TypeArguments="x:Int32" x:Key="out_BatchCount">
                    <mva:VisualBasicReference x:TypeArguments="x:Int32" ExpressionText="batchCount" />
                  </OutArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, ss:SecureString)" x:Key="in_Passwords">
                    <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, ss:SecureString)" ExpressionText="Passwords" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_OffsetsFileName">
                    <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="offSetsFileName" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_FSMForecastFileName">
                    <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="FSMforecastFilename" />
                  </InArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="out_RevenueFile">
                    <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="RevenueFile" />
                  </OutArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_RevenueFile">
                    <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="RevenueFile" />
                  </InArgument>
                  <InArgument x:TypeArguments="s:String[]" x:Key="ProcessesUsed">
                    <mva:VisualBasicValue x:TypeArguments="s:String[]" ExpressionText="processesUsed" />
                  </InArgument>
                  <OutArgument x:TypeArguments="x:Int32" x:Key="out_mtdCol">
                    <mva:VisualBasicReference x:TypeArguments="x:Int32" ExpressionText="mtdCol" />
                  </OutArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="out_forecastTab">
                    <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="forecastTab" />
                  </OutArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_UnitAddsMTDFileName">
                    <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="unitAdssMtdFileName" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_MTDShareDrivePath">
                    <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="mtdShareDrivePath" />
                  </InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </Sequence>
          </TryCatch.Try>
          <TryCatch.Catches>
            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="422,221" sap2010:WorkflowViewState.IdRef="Catch`1_15">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ActivityAction x:TypeArguments="s:Exception">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Log error and set batch exception" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_50">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Set batch exception" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_111">
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </ActivityAction>
            </Catch>
          </TryCatch.Catches>
          <TryCatch.Finally>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log transaction finished" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_33" UnSafe="False" WorkflowFileName="Framework\TransactionFinishLog.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="TransactionID">[transactionId.ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="TransactionName">[transactionName]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="TransactionStartTime">[transactionStartTime.ToString]</InArgument>
                <InArgument x:TypeArguments="s:Exception" x:Key="TransactionError">[SystemError]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="ProjectId">[Config("ProjectId").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[Config("ProjectName").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="Trans_Count">[batchCount.ToString]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </TryCatch.Finally>
        </TryCatch>
      </State.Entry>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">324.5,484</av:Point>
          <av:Size x:Key="ShapeSize">231,112</av:Size>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Double x:Key="StateContainerWidth">197</x:Double>
          <x:Double x:Key="StateContainerHeight">34</x:Double>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <State.Transitions>
        <Transition DisplayName="ProcessSuccessful" sap:VirtualizedContainerService.HintSize="430,507" sap2010:WorkflowViewState.IdRef="Transition_25">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">440,596 440,626 444.4,626 444.4,683.5</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">46</x:Int32>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.Condition>
            <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="SystemError Is Nothing" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_4" />
          </Transition.Condition>
          <Transition.To>
            <State x:Name="__ReferenceID0" sap2010:Annotation.AnnotationText="Process stops here" DisplayName="End Process" sap:VirtualizedContainerService.HintSize="144,93" sap2010:WorkflowViewState.IdRef="State_6" IsFinal="True">
              <State.Entry>
                <TryCatch sap:VirtualizedContainerService.HintSize="980,2808" sap2010:WorkflowViewState.IdRef="TryCatch_11">
                  <TryCatch.Try>
                    <Sequence DisplayName="Sequence - End Process" sap:VirtualizedContainerService.HintSize="376,306" sap2010:WorkflowViewState.IdRef="Sequence_62">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke End workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_37" UnSafe="False" WorkflowFileName="End.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, ss:SecureString)" x:Key="in_Passwords">[Passwords]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_FSMForecastFileName">[FSMforecastFilename]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_forecastTab">[forecastTab]</InArgument>
                          <InArgument x:TypeArguments="x:Int32" x:Key="in_mtdCol">[mtdCol]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_UnitAddsMTDFileName">[unitAdssMtdFileName]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke CloseAllApplications workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_26" UnSafe="False" WorkflowFileName="Framework\CloseAllApplications.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="s:String[]" x:Key="ProcessesUsed">[processesUsed]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                    </Sequence>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="946,500" sap2010:WorkflowViewState.IdRef="Catch`1_11">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Sequence -End Process Catch Block" sap:VirtualizedContainerService.HintSize="755,431" sap2010:WorkflowViewState.IdRef="Sequence_30">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Assign SystemError" sap:VirtualizedContainerService.HintSize="713,60" sap2010:WorkflowViewState.IdRef="Assign_116">
                            <Assign.To>
                              <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <If Condition="[Config Is Nothing]" DisplayName="If - Config Check in End Process" sap:VirtualizedContainerService.HintSize="713,239" sap2010:WorkflowViewState.IdRef="If_39">
                            <If.Then>
                              <ui:LogMessage DisplayName="Log generic error" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_63" Level="Error" Message="[string.Format(&quot;System error (No config loaded) (Source: {0}): {1} - {2}&quot;, exception.Source, exception.GetType.Name, exception.Message)]" />
                            </If.Then>
                            <If.Else>
                              <ui:LogMessage DisplayName="Log message - End Process Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_30" Level="Error" Message="[string.Format(Config(&quot;LogMessage_EndProcessError&quot;).ToString, exception.Source, exception.GetType.Name, exception.Message)]" />
                            </If.Else>
                          </If>
                        </Sequence>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                  <TryCatch.Finally>
                    <Sequence DisplayName="Sequence -Finally" sap:VirtualizedContainerService.HintSize="942,1752" sap2010:WorkflowViewState.IdRef="Sequence_47">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[SystemError IsNot Nothing]" DisplayName="If - Exception to report?" sap:VirtualizedContainerService.HintSize="900,1137" sap2010:WorkflowViewState.IdRef="If_15">
                        <If.Then>
                          <Sequence DisplayName="Sequence - Application Exceptions" sap:VirtualizedContainerService.HintSize="755,989" sap2010:WorkflowViewState.IdRef="Sequence_58">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign DisplayName="Set exception type" sap:VirtualizedContainerService.HintSize="713,60" sap2010:WorkflowViewState.IdRef="Assign_87">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[exceptionType]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">Application</InArgument>
                              </Assign.Value>
                            </Assign>
                            <If Condition="[SystemError.GetType = GetType(UiPath.Core.BusinessRuleException)]" DisplayName="If business rule exception" sap:VirtualizedContainerService.HintSize="713,797" sap2010:WorkflowViewState.IdRef="If_27">
                              <If.Then>
                                <Sequence DisplayName="Sequence - Functional Exception" sap:VirtualizedContainerService.HintSize="568,649" sap2010:WorkflowViewState.IdRef="Sequence_60">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign DisplayName="Set exception type" sap:VirtualizedContainerService.HintSize="526,60" sap2010:WorkflowViewState.IdRef="Assign_86">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[exceptionType]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Functional</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Sequence DisplayName="Sequence -Inner Exception" sap:VirtualizedContainerService.HintSize="526,300" sap2010:WorkflowViewState.IdRef="Sequence_59">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If Condition="[SystemError.InnerException IsNot Nothing AndAlso (SystemError.InnerException.Message = &quot;Functional&quot; OR SystemError.InnerException.Message = &quot;Operational&quot;)]" DisplayName="If inner exception" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_16">
                                      <If.Then>
                                        <Assign DisplayName="Set exception type" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_118">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[exceptionType]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[SystemError.InnerException.Message]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </If.Then>
                                    </If>
                                  </Sequence>
                                  <Assign sap2010:Annotation.AnnotationText="By default, we do not want to report a BusinessRuleException, so empty this out to avoid creating a ticket." DisplayName="Do not report BusinessRuleException at Process Level" sap:VirtualizedContainerService.HintSize="526,117" sap2010:WorkflowViewState.IdRef="Assign_115">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                                    </Assign.Value>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Assign>
                                </Sequence>
                              </If.Then>
                            </If>
                          </Sequence>
                        </If.Then>
                      </If>
                      <If Condition="[Config IsNot Nothing]" DisplayName="If -Config Not Nothing in ENd Process" sap:VirtualizedContainerService.HintSize="900,235" sap2010:WorkflowViewState.IdRef="If_29">
                        <If.Then>
                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log process finished" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_28" UnSafe="False" WorkflowFileName="Framework\ProcessFinished.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="ProcessName">[Config("ProjectName").ToString]</InArgument>
                              <InArgument x:TypeArguments="s:Exception" x:Key="ProcessError">[SystemError]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="ProcessSummary">[processSummary]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="ProcessStartTime">[processStartTime.ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="ProjectId">[Config("ProjectId").ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="ExceptionType">[exceptionType]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                        </If.Then>
                      </If>
                      <If Condition="[SystemError IsNot Nothing]" DisplayName="If -Syetsm Error is not nothing" sap:VirtualizedContainerService.HintSize="900,208" sap2010:WorkflowViewState.IdRef="If_40">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Throw DisplayName="Throw - System Error" Exception="[new Exception(SystemError.GetType.Name+&quot; : &quot;+ SystemError.Message+ &quot; at Source &quot; +SystemError.Source)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_6" />
                        </If.Then>
                      </If>
                    </Sequence>
                  </TryCatch.Finally>
                </TryCatch>
              </State.Entry>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">358,683.5</av:Point>
                  <av:Size x:Key="ShapeSize">144,93</av:Size>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Double x:Key="StateContainerWidth">110</x:Double>
                  <x:Double x:Key="StateContainerHeight">26</x:Double>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </State>
          </Transition.To>
        </Transition>
        <Transition DisplayName="ProcessFailed" sap:VirtualizedContainerService.HintSize="450,505" sap2010:WorkflowViewState.IdRef="Transition_26">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">324.5,540 294.5,540 294.5,590 252.5,590</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">37</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">36</x:Int32>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <State x:Name="__ReferenceID1" sap2010:Annotation.AnnotationText="A system error occurred and should be logged appropriately" DisplayName="Error" sap:VirtualizedContainerService.HintSize="205,128" sap2010:WorkflowViewState.IdRef="State_11">
              <State.Entry>
                <Sequence DisplayName="Sequence - Config Sheet" sap:VirtualizedContainerService.HintSize="839,677" sap2010:WorkflowViewState.IdRef="Sequence_74">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If Condition="[Config Is Nothing]" DisplayName="If- Config Sheet Nothing" sap:VirtualizedContainerService.HintSize="797,585" sap2010:WorkflowViewState.IdRef="If_38">
                    <If.Then>
                      <Sequence DisplayName="Sequence - Generic Error" sap:VirtualizedContainerService.HintSize="376,310" sap2010:WorkflowViewState.IdRef="Sequence_77">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="Log generic error" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_62" Level="Error" Message="[string.Format(&quot;System error (No config loaded) (Source: {0}): {1} - {2}&quot;, SystemError.Source, SystemError.GetType.Name, SystemError.Message)]" />
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_43" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="s:String[]" x:Key="in_ProcessList">[processesUsed]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Sequence -Config Not Nothing" sap:VirtualizedContainerService.HintSize="376,437" sap2010:WorkflowViewState.IdRef="Sequence_78">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="Log error" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_61" Level="Error" Message="[string.Format(Config(errorMessageTemplate).ToString, SystemError.Source, SystemError.GetType.Name, SystemError.Message)]" />
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke TakeScreenshot workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_41" UnSafe="False" WorkflowFileName="Framework\TakeScreenshot.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Folder">[Config("ExScreenshotsFolderPath").ToString]</InArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="io_FilePath" />
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_44" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="s:String[]" x:Key="in_ProcessList">[processesUsed]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </State.Entry>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">47.5,526</av:Point>
                  <av:Size x:Key="ShapeSize">205,128</av:Size>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Double x:Key="StateContainerWidth">171</x:Double>
                  <x:Double x:Key="StateContainerHeight">35</x:Double>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <State.Transitions>
                <Transition DisplayName="ErrorLogged" sap:VirtualizedContainerService.HintSize="450,505" sap2010:WorkflowViewState.IdRef="Transition_28">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">150,654 150,730 358,730</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">37</x:Int32>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <x:Reference>__ReferenceID0</x:Reference>
                  </Transition.To>
                  <Transition.Condition>True</Transition.Condition>
                </Transition>
              </State.Transitions>
            </State>
          </Transition.To>
          <Transition.Action>
            <Assign DisplayName="Set error message template" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_110">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[errorMessageTemplate]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">LogMessage_ProcessError</InArgument>
              </Assign.Value>
            </Assign>
          </Transition.Action>
          <Transition.Condition>[SystemError IsNot Nothing]</Transition.Condition>
        </Transition>
      </State.Transitions>
      <State.Variables>
        <Variable x:TypeArguments="x:Int32" Default="0" Name="batchCount" />
      </State.Variables>
    </State>
    <x:Reference>__ReferenceID0</x:Reference>
    <State x:Name="__ReferenceID3" sap2010:Annotation.AnnotationText="Read Config, Init Applications" DisplayName="Init" sap:VirtualizedContainerService.HintSize="254,92" sap2010:WorkflowViewState.IdRef="State_10">
      <State.Entry>
        <TryCatch DisplayName="Catch intialization exceptions" sap:VirtualizedContainerService.HintSize="601,1597" sap2010:WorkflowViewState.IdRef="TryCatch_10">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <TryCatch.Try>
            <Sequence DisplayName="Sequence - Config file" sap:VirtualizedContainerService.HintSize="563,1066" sap2010:WorkflowViewState.IdRef="Sequence_28">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[Config is Nothing]" DisplayName="If first run - read Config file" sap:VirtualizedContainerService.HintSize="521,716" sap2010:WorkflowViewState.IdRef="If_11">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Sequence - Config Nothing" sap:VirtualizedContainerService.HintSize="376,568" sap2010:WorkflowViewState.IdRef="Sequence_27">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:AddLogFields DisplayName="Add Machine Name Field" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddLogFields_5">
                      <ui:AddLogFields.Fields>
                        <InArgument x:TypeArguments="x:String" x:Key="MachineName">[Environment.MachineName]</InArgument>
                      </ui:AddLogFields.Fields>
                    </ui:AddLogFields>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InitAllSettings workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_23" UnSafe="False" WorkflowFileName="Framework\InitAllSettings.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">Data\Config.xlsx</InArgument>
                        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[Config]</OutArgument>
                        <OutArgument x:TypeArguments="scg:Dictionary(x:String, ss:SecureString)" x:Key="out_Passwords">[Passwords]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Assign DisplayName="Set process start time" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_38">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:DateTime">[processStartTime]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:DateTime">[DateTime.Now]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Set list of processes to kill" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_117">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:String[]">[processesUsed]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:String[]">[config("ProcessesUsed").ToString.Split(","c)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log process started" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_25" UnSafe="False" WorkflowFileName="Framework\ProcessStartLog.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="ProcessName">[Config("ProjectName").ToString]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ProcessStartTime">[processStartTime.ToString]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ProjectId">[Config("ProjectId").ToString]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                </If.Then>
              </If>
              <ui:LogMessage DisplayName="Log message -Initializing Robot" sap:VirtualizedContainerService.HintSize="521,91" sap2010:WorkflowViewState.IdRef="LogMessage_49" Level="Info" Message="[&quot;Initializing robot&quot;]" />
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Init workflow" sap:VirtualizedContainerService.HintSize="521,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" UnSafe="False" WorkflowFileName="Init.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                    <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="Config" />
                  </InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, ss:SecureString)" x:Key="in_Passwords">
                    <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, ss:SecureString)" ExpressionText="Passwords" />
                  </InArgument>
                  <InArgument x:TypeArguments="s:String[]" x:Key="ProcessesUsed">
                    <mva:VisualBasicValue x:TypeArguments="s:String[]" ExpressionText="processesUsed" />
                  </InArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="out_OffsetsFileName">
                    <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="offSetsFileName" />
                  </OutArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="out_FSMForecastFileName">
                    <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="FSMforecastFilename" />
                  </OutArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="out_UnitAddsMTDFileName">
                    <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="unitAdssMtdFileName" />
                  </OutArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="out_MTDShareDrivePath">
                    <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="mtdShareDrivePath" />
                  </OutArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </Sequence>
          </TryCatch.Try>
          <TryCatch.Catches>
            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="567,221" sap2010:WorkflowViewState.IdRef="Catch`1_10">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ActivityAction x:TypeArguments="s:Exception">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Sequence - System Error" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_29">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Set system error" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_39">
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </ActivityAction>
            </Catch>
          </TryCatch.Catches>
        </TryCatch>
      </State.Entry>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">313,154</av:Point>
          <av:Size x:Key="ShapeSize">254,92</av:Size>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Double x:Key="StateContainerWidth">220</x:Double>
          <x:Double x:Key="StateContainerHeight">25</x:Double>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <State.Transitions>
        <Transition DisplayName="InitSuccess" sap:VirtualizedContainerService.HintSize="450,505" sap2010:WorkflowViewState.IdRef="Transition_23">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">440,246 440,294</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <State x:Name="__ReferenceID4" sap2010:Annotation.AnnotationText="Load batch input data. This step can be retried." DisplayName="Load Batch Data" sap:VirtualizedContainerService.HintSize="1073,2176" sap2010:WorkflowViewState.IdRef="State_9">
              <State.Entry>
                <Sequence DisplayName="Sequence -Load Batch Data" sap:VirtualizedContainerService.HintSize="1027,1731" sap2010:WorkflowViewState.IdRef="Sequence_35">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <TryCatch DisplayName="Try catch" sap:VirtualizedContainerService.HintSize="985,1639" sap2010:WorkflowViewState.IdRef="TryCatch_20">
                    <TryCatch.Try>
                      <Sequence sap2010:Annotation.AnnotationText="" DisplayName="Load Data" sap:VirtualizedContainerService.HintSize="947,1108" sap2010:WorkflowViewState.IdRef="Sequence_66">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ShouldStop DisplayName="Check Stop Signal" sap:VirtualizedContainerService.HintSize="905,22" sap2010:WorkflowViewState.IdRef="ShouldStop_5" Result="[ShouldStop]" />
                        <If Condition="[ShouldStop]" DisplayName="Should Stop or Get Next" sap:VirtualizedContainerService.HintSize="905,923" sap2010:WorkflowViewState.IdRef="If_32">
                          <If.Then>
                            <ui:LogMessage DisplayName="Log Stop message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_52" Level="Info" Message="[&quot;Stop process requested&quot;]" />
                          </If.Then>
                          <If.Else>
                            <Sequence DisplayName="Sequence -Initialize batch" sap:VirtualizedContainerService.HintSize="526,775" sap2010:WorkflowViewState.IdRef="Sequence_67">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign DisplayName="Initialize batch info" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_107">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[batchInfo]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[new Dictionary(Of String, Object)]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Load workflow" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_40" UnSafe="False" WorkflowFileName="Load.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                                    <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="Config" />
                                  </InArgument>
                                  <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_BatchData">
                                    <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="batchData" />
                                  </OutArgument>
                                  <OutArgument x:TypeArguments="x:String" x:Key="out_TransactionId">
                                    <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="transactionId" />
                                  </OutArgument>
                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_BatchInfo">
                                    <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="batchInfo" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, ss:SecureString)" x:Key="in_Passwords">
                                    <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, ss:SecureString)" ExpressionText="Passwords" />
                                  </InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                              <If Condition="[string.IsNullOrWhiteSpace(transactionId)]" DisplayName="If -TransactionId " sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_36">
                                <If.Then>
                                  <Throw DisplayName="Throw -Specify TranactionId" Exception="[new Exception(&quot;You must specify a transaction ID in Load.xaml.&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_4" />
                                </If.Then>
                              </If>
                              <If Condition="[batchData Is Nothing]" DisplayName="If - Batch Data is Nothing" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_37">
                                <If.Then>
                                  <Throw DisplayName="Throw - Batch data Null" Exception="[new Exception(&quot;Batch data is null.&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_5" />
                                </If.Then>
                              </If>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="951,221" sap2010:WorkflowViewState.IdRef="Catch`1_21">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Sequence -Batch System error" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_68">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign DisplayName="Set system error" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_102">
                              <Assign.To>
                                <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                </Sequence>
              </State.Entry>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">314.5,294</av:Point>
                  <av:Size x:Key="ShapeSize">251,112</av:Size>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Double x:Key="StateContainerWidth">217</x:Double>
                  <x:Double x:Key="StateContainerHeight">34</x:Double>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <State.Transitions>
                <Transition DisplayName="LoadFailed" sap:VirtualizedContainerService.HintSize="644,678" sap2010:WorkflowViewState.IdRef="Transition_17">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">314.5,383.6 98.75,383.6 98.75,526</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">61</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">18</x:Int32>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <x:Reference>__ReferenceID1</x:Reference>
                  </Transition.To>
                  <Transition.Action>
                    <Sequence DisplayName="Sequence -load max attempts reached" sap:VirtualizedContainerService.HintSize="376,283" sap2010:WorkflowViewState.IdRef="Sequence_73">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_60" Level="Warn" Message="[&quot;Load max attempts reached&quot;]" />
                      <Assign DisplayName="Set error message template" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_109">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[errorMessageTemplate]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">LogMessage_LoadDataError</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </Transition.Action>
                  <Transition.Condition>
                    <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="SystemError IsNot Nothing And loadAttemptCount &gt;= Convert.ToInt32(Config(&quot;MaxRetries&quot;).ToString)" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_2" />
                  </Transition.Condition>
                </Transition>
                <Transition DisplayName="LoadSuccess" sap:VirtualizedContainerService.HintSize="450,505" sap2010:WorkflowViewState.IdRef="Transition_24">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">440,406 440,484</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <x:Reference>__ReferenceID2</x:Reference>
                  </Transition.To>
                  <Transition.Condition>
                    <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="SystemError Is Nothing" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_3" />
                  </Transition.Condition>
                </Transition>
                <Transition DisplayName="RetryLoad" sap:VirtualizedContainerService.HintSize="668,778" sap2010:WorkflowViewState.IdRef="Transition_27">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">565.5,338.8 595.5,338.8 595.5,195.4 567,195.4</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">28</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">32</x:Int32>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <x:Reference>__ReferenceID3</x:Reference>
                  </Transition.To>
                  <Transition.Action>
                    <Sequence DisplayName="Sequence -Retry Load " sap:VirtualizedContainerService.HintSize="376,383" sap2010:WorkflowViewState.IdRef="Sequence_72">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_59" Level="Warn" Message="[string.Format(Config(&quot;LogMessage_LoadDataError&quot;).ToString, SystemError.Source, SystemError.GetType.Name, SystemError.Message)]" />
                      <Assign DisplayName="Increment consecutive exceptions" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_105">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[loadAttemptCount]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[loadAttemptCount + 1]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="Clear system error" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_106">
                        <Assign.To>
                          <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </Transition.Action>
                  <Transition.Condition>[SystemError IsNot Nothing ANDALSO loadAttemptCount &lt; Convert.ToInt32(Config("MaxRetries").ToString)]</Transition.Condition>
                </Transition>
              </State.Transitions>
            </State>
          </Transition.To>
          <Transition.Action>
            <Assign DisplayName="Clear init attempt count" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_114">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[initAttemptCount]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">1</InArgument>
              </Assign.Value>
            </Assign>
          </Transition.Action>
          <Transition.Condition>
            <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="SystemError Is Nothing" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
          </Transition.Condition>
        </Transition>
        <Transition DisplayName="InitFailed" sap:VirtualizedContainerService.HintSize="808,678" sap2010:WorkflowViewState.IdRef="Transition_10">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">313,232.2 17.5,232.2 17.5,596.4 47.5,596.4</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">65</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">41</x:Int32>
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <x:Reference>__ReferenceID1</x:Reference>
          </Transition.To>
          <Transition.Action>
            <Sequence DisplayName="Sequence -Init Max attempts Reached" sap:VirtualizedContainerService.HintSize="376,283" sap2010:WorkflowViewState.IdRef="Sequence_76">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_65" Level="Warn" Message="[&quot;Max init attempts reached&quot;]" />
              <Assign DisplayName="Set error message template" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_108">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[errorMessageTemplate]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">LogMessage_InitException</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </Transition.Action>
          <Transition.Condition>[SystemError IsNot Nothing ANDALSO(Config Is Nothing OrElse initAttemptCount &gt;= Convert.ToInt32(Config("MaxRetries").ToString))]</Transition.Condition>
        </Transition>
        <Transition DisplayName="RetryInit" sap:VirtualizedContainerService.HintSize="818,1032" sap2010:WorkflowViewState.IdRef="Transition_30">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">541.6,154 541.6,124 490.8,124 490.8,154</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">70</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">54</x:Int32>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <x:Reference>__ReferenceID3</x:Reference>
          </Transition.To>
          <Transition.Action>
            <Sequence DisplayName="Sequence -Retry Init" sap:VirtualizedContainerService.HintSize="376,637" sap2010:WorkflowViewState.IdRef="Sequence_75">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_64" Level="Warn" Message="[string.Format(Config(&quot;LogMessage_InitException&quot;).ToString, SystemError.Source, SystemError.GetType.Name, SystemError.Message)]" />
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke TakeScreenshot workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_42" UnSafe="False" WorkflowFileName="Framework\TakeScreenshot.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Folder">[Config("ExScreenshotsFolderPath").ToString]</InArgument>
                  <InOutArgument x:TypeArguments="x:String" x:Key="io_FilePath" />
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_45" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="s:String[]" x:Key="in_ProcessList">[processesUsed]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <Assign DisplayName="Increment attempt count" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_112">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[initAttemptCount]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[initAttemptCount + 1]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Clear system error" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_113">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </Transition.Action>
          <Transition.Condition>[SystemError IsNot Nothing AndAlso Config IsNot Nothing AndAlso initAttemptCount &lt; Convert.ToInt32(Config("MaxRetries").ToString)]</Transition.Condition>
        </Transition>
      </State.Transitions>
    </State>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <StateMachine.Variables>
      <Variable x:TypeArguments="s:Exception" Name="SystemError" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Config" />
      <Variable x:TypeArguments="s:DateTime" Name="processStartTime" />
      <Variable x:TypeArguments="x:String" Name="processSummary" />
      <Variable x:TypeArguments="x:Boolean" Name="ShouldStop" />
      <Variable x:TypeArguments="x:String" Name="transactionName" />
      <Variable x:TypeArguments="x:String" Name="transactionId" />
      <Variable x:TypeArguments="s:DateTime" Name="transactionStartTime" />
      <Variable x:TypeArguments="x:String" Default="Application" Name="exceptionType" />
      <Variable x:TypeArguments="x:String" Name="errorMessageTemplate" />
      <Variable x:TypeArguments="sd:DataTable" Name="batchData" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="batchInfo" />
      <Variable x:TypeArguments="x:Int32" Default="1" Name="loadAttemptCount" />
      <Variable x:TypeArguments="x:Int32" Default="1" Name="initAttemptCount" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, ss:SecureString)" Name="Passwords" />
      <Variable x:TypeArguments="s:String[]" Name="processesUsed" />
      <Variable x:TypeArguments="x:Int32" Name="mtdCol" />
      <Variable x:TypeArguments="x:String" Name="offSetsFileName" />
      <Variable x:TypeArguments="x:String" Name="FSMforecastFilename" />
      <Variable x:TypeArguments="x:String" Name="RevenueFile" />
      <Variable x:TypeArguments="x:String" Name="forecastTab" />
      <Variable x:TypeArguments="x:String" Name="unitAdssMtdFileName" />
      <Variable x:TypeArguments="x:String" Name="mtdShareDrivePath" />
    </StateMachine.Variables>
  </StateMachine>
</Activity>